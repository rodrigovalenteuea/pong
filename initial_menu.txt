while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == KEYDOWN:
            if event.key == K_SPACE:
                pygame.display.flip()
                pygame.display.set_caption("MyPong - PyGame Edition - 2023-12-12")
                game_loop = True

                while game_loop:

                    for event in pygame.event.get():
                        if event.type == QUIT:
                            pygame.quit()
                            exit()
                        if event.type == KEYDOWN:
                            if event.key == K_w:
                                player_1.moving_up = True

                            if event.key == K_s:
                                player_1.moving_down = True

                        if event.type == KEYUP:
                            if event.key == K_w:
                                player_1.moving_up = False
                            if event.key == K_s:
                                player_1.moving_down = False

                    # checking the victory condition
                    if player_1.score < SCORE_MAX and player_2.score < SCORE_MAX:

                        screen.fill(COLOR_BLACK)

                        # player 1 collides with upper wall
                        if player_1.position_y <= 0:
                            player_1.position_y = 0

                        # player 1 collides with lower wall
                        elif player_1.position_y >= 660:
                            player_1.position_y = 660

                        # player 2 collides with upper wall
                        if player_2.position_y <= 0:
                            player_2.position_y = 0

                        # player 2 collides with lower wall
                        elif player_2.position_y >= 660:
                            player_2.position_y = 660

                        # ball collision with the players
                        if ball_y <= player_2.position_y + 60 and ball_y + 12 >= player_2.position_y:
                            if ball_x + 12 >= player_2.position_x:
                                l1 = player_2.position_y + 28
                                l2 = player_2.position_y + 32
                                if ball_dy > 0 and ball_y + 11 < l1:
                                    ball_dy *= - 1
                                elif ball_dy < 0 and ball_y > l2:
                                    ball_dy *= - 1
                                elif ball_y + 11 < l1:
                                    ball_dy = -1
                                elif ball_y > l2:
                                    ball_dy = 1
                                else:
                                    ball_dy = 0
                                if ball_dx > 0:
                                    ball_dx *= -1

                        if ball_y <= player_1.position_y + 60 and ball_y + 12 >= player_1.position_y:
                            if ball_x <= player_1.position_x + 14:
                                l1 = player_1.position_y + 28
                                l2 = player_1.position_y + 32
                                if ball_dy > 0 and ball_y + 11 < l1:
                                    ball_dy *= - 1
                                elif ball_dy < 0 and ball_y > l2:
                                    ball_dy *= - 1
                                elif ball_y + 11 < l1:
                                    ball_dy = -1
                                elif ball_y > l2:
                                    ball_dy = 1
                                else:
                                    ball_dy = 0
                                if ball_dx < 0:
                                    ball_dx *= -1

                        # ball collision with the wall
                        if ball_y > 700:
                            ball_dy *= -1
                            bounce_sound_effect.play()
                        elif ball_y <= 0:
                            ball_dy *= -1
                            bounce_sound_effect.play()

                        # prob
                        prob = random.randint(1, 100)
                        if player_2.position_y > ball_y:
                            if prob <= 97:
                                player_2.position_y -= 1

                        if player_2.position_y + 60 < ball_y + 12:
                            if prob <= 97:
                                player_2.position_y += 1

                        # scoring points
                        if ball_x < 38:
                            ball_x = 640
                            ball_y = random.randint(0, 720)
                            ball_dy *= -1
                            player_2.score += 1
                            scoring_sound_effect.play()

                        elif ball_x > 1244:
                            ball_x = 640
                            ball_y = random.randint(0, 720)
                            ball_dy *= -1
                            player_1.score += 1
                            scoring_sound_effect.play()

                        if player_1.moving_up:
                            player_1.position_y -= 1
                            player_1.top_y -= 1
                            player_1.bottom_y -= 1

                        if player_1.moving_down:
                            player_1.position_y += 1
                            player_1.top_y += 1
                            player_1.bottom_y += 1

                        # ball movement
                        ball_x = ball_x + ball_dx
                        ball_y = ball_y + ball_dy

                        # update score hud
                        score_text = score_font.render(str(player_1.score), True, COLOR_WHITE, COLOR_BLACK)
                        score_text2 = score_font.render(str(player_2.score), True, COLOR_WHITE, COLOR_BLACK)

                        screen.blit(ball, (ball_x, ball_y))
                        screen.blit(score_text, score_text_rect)
                        screen.blit(score_text2, score_text_rect2)
                        screen.blit(player_1_img, (player_1.position_x, player_1.position_y))
                        screen.blit(player_2_img, (player_2.position_x, player_2.position_y))

                        for cont in range(1, 20):
                            screen.blit(middle_bar, (middle_bar_center, middle_bar_y * cont))
                            middle_bar_y = 40

                    pygame.display.flip()
                    game_clock.tick(600)

            elif event.type == KEYDOWN:
              if event.key == K_ESCAPE:
                pygame.display.quit()



